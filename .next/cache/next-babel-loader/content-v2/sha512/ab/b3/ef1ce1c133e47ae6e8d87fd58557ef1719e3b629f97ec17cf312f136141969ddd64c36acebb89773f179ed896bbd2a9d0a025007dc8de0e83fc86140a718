{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"C:\\\\Users\\\\ADMIN\\\\Desktop\\\\MyProjects\\\\Next-JS-Project\\\\pages\\\\index.js\";\nimport { MongoClient } from \"mongodb\";\nimport { Fragment } from \"react\";\nimport MeetupList from \"../components/meetups/MeetupList\";\nconst DUMMY_MEETUPS = [{\n  id: \"m1\",\n  title: \"A First Meetup\",\n  image: \"https://upload.wikimedia.org/wikipedia/commons/thumb/d/d3/Stadtbild_M%C3%BCnchen.jpg/1280px-Stadtbild_M%C3%BCnchen.jpg\",\n  address: \"Some address 5, 12345 Some City\",\n  description: \"This is a first meetup!\"\n}, {\n  id: \"m2\",\n  title: \"A Second Meetup\",\n  image: \"https://upload.wikimedia.org/wikipedia/commons/thumb/d/d3/Stadtbild_M%C3%BCnchen.jpg/1280px-Stadtbild_M%C3%BCnchen.jpg\",\n  address: \"Some address 10, 12345 Some City\",\n  description: \"This is a second meetup!\"\n}];\n\nfunction HomePage(props) {\n  let Content;\n\n  if (props.meetups.length === 0) {\n    Content = /*#__PURE__*/_jsxDEV(\"h1\", {\n      style: {\n        textAlign: \"center\"\n      },\n      children: \"Empty data!\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 15\n    }, this);\n  } else {\n    /*#__PURE__*/\n    _jsxDEV(MeetupList, {\n      meetups: props.meetups\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 5\n    }, this);\n  }\n\n  return /*#__PURE__*/_jsxDEV(Fragment, {\n    children: Content\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 31,\n    columnNumber: 10\n  }, this);\n} // export async function getServerSideProps(context) {\n//   const req = context.req;\n//   const res = context.res;\n//   // fetch data from an API\n//   return {\n//     props: {\n//       meetups: DUMMY_MEETUPS\n//     }\n//   };\n// }\n\n\nexport async function getStaticProps() {\n  const client = await MongoClient.connect(\"mongodb+srv://Karthick:TheRock07@cluster0.n9nyb.mongodb.net/MeetupsDatabase?retryWrites=true&w=majority\");\n  const db = client.db();\n  const meetupsCollection = db.collection(\"meetups\");\n  const meetups = await meetupsCollection.find().toArray();\n  client.close(); // fetch data from an API\n\n  return {\n    props: {\n      meetups: meetups.map(meetup => ({\n        title: meetup.title,\n        address: meetup.address,\n        image: meetup.image,\n        id: meetup._id.toString()\n      }))\n    },\n    revalidate: 1\n  };\n}\nexport default HomePage;","map":{"version":3,"sources":["C:/Users/ADMIN/Desktop/MyProjects/Next-JS-Project/pages/index.js"],"names":["MongoClient","Fragment","MeetupList","DUMMY_MEETUPS","id","title","image","address","description","HomePage","props","Content","meetups","length","textAlign","getStaticProps","client","connect","db","meetupsCollection","collection","find","toArray","close","map","meetup","_id","toString","revalidate"],"mappings":";;AAAA,SAASA,WAAT,QAA4B,SAA5B;AACA,SAASC,QAAT,QAAyB,OAAzB;AACA,OAAOC,UAAP,MAAuB,kCAAvB;AAEA,MAAMC,aAAa,GAAG,CACpB;AACEC,EAAAA,EAAE,EAAE,IADN;AAEEC,EAAAA,KAAK,EAAE,gBAFT;AAGEC,EAAAA,KAAK,EACH,wHAJJ;AAKEC,EAAAA,OAAO,EAAE,iCALX;AAMEC,EAAAA,WAAW,EAAE;AANf,CADoB,EASpB;AACEJ,EAAAA,EAAE,EAAE,IADN;AAEEC,EAAAA,KAAK,EAAE,iBAFT;AAGEC,EAAAA,KAAK,EACH,wHAJJ;AAKEC,EAAAA,OAAO,EAAE,kCALX;AAMEC,EAAAA,WAAW,EAAE;AANf,CAToB,CAAtB;;AAmBA,SAASC,QAAT,CAAkBC,KAAlB,EAAyB;AACvB,MAAIC,OAAJ;;AACA,MAAID,KAAK,CAACE,OAAN,CAAcC,MAAd,KAAyB,CAA7B,EAAgC;AAC9BF,IAAAA,OAAO,gBAAG;AAAI,MAAA,KAAK,EAAE;AAAEG,QAAAA,SAAS,EAAE;AAAb,OAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAAV;AACD,GAFD,MAEO;AACL;AAAA,YAAC,UAAD;AAAY,MAAA,OAAO,EAAEJ,KAAK,CAACE;AAA3B;AAAA;AAAA;AAAA;AAAA;AACD;;AACD,sBAAO,QAAC,QAAD;AAAA,cAAWD;AAAX;AAAA;AAAA;AAAA;AAAA,UAAP;AACD,C,CAED;AACA;AACA;AAEA;AAEA;AACA;AACA;AACA;AACA;AACA;;;AAEA,OAAO,eAAeI,cAAf,GAAgC;AACrC,QAAMC,MAAM,GAAG,MAAMhB,WAAW,CAACiB,OAAZ,CACnB,yGADmB,CAArB;AAIA,QAAMC,EAAE,GAAGF,MAAM,CAACE,EAAP,EAAX;AAEA,QAAMC,iBAAiB,GAAGD,EAAE,CAACE,UAAH,CAAc,SAAd,CAA1B;AAEA,QAAMR,OAAO,GAAG,MAAMO,iBAAiB,CAACE,IAAlB,GAAyBC,OAAzB,EAAtB;AAEAN,EAAAA,MAAM,CAACO,KAAP,GAXqC,CAarC;;AACA,SAAO;AACLb,IAAAA,KAAK,EAAE;AACLE,MAAAA,OAAO,EAAEA,OAAO,CAACY,GAAR,CAAaC,MAAD,KAAa;AAChCpB,QAAAA,KAAK,EAAEoB,MAAM,CAACpB,KADkB;AAEhCE,QAAAA,OAAO,EAAEkB,MAAM,CAAClB,OAFgB;AAGhCD,QAAAA,KAAK,EAAEmB,MAAM,CAACnB,KAHkB;AAIhCF,QAAAA,EAAE,EAAEqB,MAAM,CAACC,GAAP,CAAWC,QAAX;AAJ4B,OAAb,CAAZ;AADJ,KADF;AASLC,IAAAA,UAAU,EAAE;AATP,GAAP;AAWD;AAED,eAAenB,QAAf","sourcesContent":["import { MongoClient } from \"mongodb\";\r\nimport { Fragment } from \"react\";\r\nimport MeetupList from \"../components/meetups/MeetupList\";\r\n\r\nconst DUMMY_MEETUPS = [\r\n  {\r\n    id: \"m1\",\r\n    title: \"A First Meetup\",\r\n    image:\r\n      \"https://upload.wikimedia.org/wikipedia/commons/thumb/d/d3/Stadtbild_M%C3%BCnchen.jpg/1280px-Stadtbild_M%C3%BCnchen.jpg\",\r\n    address: \"Some address 5, 12345 Some City\",\r\n    description: \"This is a first meetup!\",\r\n  },\r\n  {\r\n    id: \"m2\",\r\n    title: \"A Second Meetup\",\r\n    image:\r\n      \"https://upload.wikimedia.org/wikipedia/commons/thumb/d/d3/Stadtbild_M%C3%BCnchen.jpg/1280px-Stadtbild_M%C3%BCnchen.jpg\",\r\n    address: \"Some address 10, 12345 Some City\",\r\n    description: \"This is a second meetup!\",\r\n  },\r\n];\r\n\r\nfunction HomePage(props) {\r\n  let Content;\r\n  if (props.meetups.length === 0) {\r\n    Content = <h1 style={{ textAlign: \"center\" }}>Empty data!</h1>;\r\n  } else {\r\n    <MeetupList meetups={props.meetups} />;\r\n  }\r\n  return <Fragment>{Content}</Fragment>;\r\n}\r\n\r\n// export async function getServerSideProps(context) {\r\n//   const req = context.req;\r\n//   const res = context.res;\r\n\r\n//   // fetch data from an API\r\n\r\n//   return {\r\n//     props: {\r\n//       meetups: DUMMY_MEETUPS\r\n//     }\r\n//   };\r\n// }\r\n\r\nexport async function getStaticProps() {\r\n  const client = await MongoClient.connect(\r\n    \"mongodb+srv://Karthick:TheRock07@cluster0.n9nyb.mongodb.net/MeetupsDatabase?retryWrites=true&w=majority\"\r\n  );\r\n\r\n  const db = client.db();\r\n\r\n  const meetupsCollection = db.collection(\"meetups\");\r\n\r\n  const meetups = await meetupsCollection.find().toArray();\r\n\r\n  client.close();\r\n\r\n  // fetch data from an API\r\n  return {\r\n    props: {\r\n      meetups: meetups.map((meetup) => ({\r\n        title: meetup.title,\r\n        address: meetup.address,\r\n        image: meetup.image,\r\n        id: meetup._id.toString(),\r\n      })),\r\n    },\r\n    revalidate: 1,\r\n  };\r\n}\r\n\r\nexport default HomePage;\r\n"]},"metadata":{},"sourceType":"module"}